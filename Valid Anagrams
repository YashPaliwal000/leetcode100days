Given two strings s and t, return true if t is an anagram of s, and false otherwise.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

 

Example 1:

Input: s = "anagram", t = "nagaram"
Output: true
Example 2:

Input: s = "rat", t = "car"
Output: false
 

Constraints:

1 <= s.length, t.length <= 5 * 104
s and t consist of lowercase English letters.

C++ SOLUTION:

class Solution {
public:
    bool isAnagram(string s, string t) {
      int count[256] = { 0 };
      int i;
        if(s.length()!=t.length())return false;
        for (i = 0; s[i] && t[i]; i++) {
           count[s[i]]++;
           count[t[i]]--;
         }
        for (i = 0; i < 256; i++)
            if (count[i])
              return false;
    return true;
    }
};

Java Code:

class Solution {
    public boolean isAnagram(String s, String t) {
        if( s.length() != t.length())
            return false;
        char[] c1 = s.toCharArray();
        char[] c2=t.toCharArray();
        int[] freq = new int[26];
        for(int i=0;i < c1.length;i++){
            freq[c1[i]- 'a']++;
            freq[c2[i]- 'a']--;
        }
        for(int num:freq){
            if(num!=0)
                return false;
        }
           
        return true;
    }
}
