
Given an integer x, return true if x is palindrome integer.

An integer is a palindrome when it reads the same backward as forward.

For example, 121 is a palindrome while 123 is not.
 

Example 1:

Input: x = 121
Output: true
Explanation: 121 reads as 121 from left to right and from right to left.
Example 2:

Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
 

Constraints:

-231 <= x <= 231 - 1

C++ solutions:

class Solution {
public:
    bool isPalindrome(int x) {
        if(x<0)
            return false;
       long long int temp=x;
     long long   int rev=0;
        while(temp!=0){
            rev=rev*10+(temp%10);
            temp=temp/10;
        }
        if(rev==x)
            return true;
        return false;
    }
};

C++ SOLUTION USING STRING

class Solution {
public:
    bool isPalindrome(int x) {
        
        if(x<0) return false;
        
        string str=to_string(x);
        int n=str.size()-1;
        for(int i=0;i<=n/2;i++)
            if(str[i] !=str[n-i])
                return false;
        return true;
    }
};
