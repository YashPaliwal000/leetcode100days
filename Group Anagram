Given an array of strings strs, group the anagrams together. You can return the answer in any order.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

 

Example 1:

Input: strs = ["eat","tea","tan","ate","nat","bat"]
Output: [["bat"],["nat","tan"],["ate","eat","tea"]]
Example 2:

Input: strs = [""]
Output: [[""]]
Example 3:

Input: strs = ["a"]
Output: [["a"]]
 

Constraints:

1 <= strs.length <= 104
0 <= strs[i].length <= 100
strs[i] consists of lowercase English letters.

Java Code :

class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        HashMap<HashMap<Character,Integer>,ArrayList<String>> bmap = new HashMap<>();
        for(String str:strs){
            HashMap<Character,Integer> freq = new HashMap<>();
            for(int i=0;i<str.length();i++){
                char ch = str.charAt(i);
                freq.put(ch,freq.getOrDefault(ch,0)+1);
            }
            if(bmap.containsKey(freq)== false){
                ArrayList<String> list = new ArrayList<>();
                list.add(str);
                bmap.put(freq,list);
            }else{
                ArrayList<String> list = bmap.get(freq);
                list.add(str);
            }
        }
        List<List<String>> res = new ArrayList<>();
        for(ArrayList<String> val:bmap.values()){
            res.add(val);
        }
        return res;
    }
}
