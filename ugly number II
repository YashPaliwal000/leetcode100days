An ugly number is a positive integer whose prime factors are limited to 2, 3, and 5.

Given an integer n, return the nth ugly number.

 

Example 1:

Input: n = 10
Output: 12
Explanation: [1, 2, 3, 4, 5, 6, 8, 9, 10, 12] is the sequence of the first 10 ugly numbers.
Example 2:

Input: n = 1
Output: 1
Explanation: 1 has no prime factors, therefore all of its prime factors are limited to 2, 3, and 5.
 

Constraints:

1 <= n <= 1690

C++ CODE:

class Solution {
public:
    int nthUglyNumber(int n) {
        if(n<= 0) return false;
        if(n == 1) return true;
        int t2=0,t3=0,t5=0;
        vector<int> k(n);
        k[0]=1;
        for(int i=1;i<n;i++){
            k[i] = min(k[t2]*2,min(k[t3]*3,k[t5]*5));
            if(k[i]==k[t2]*2)t2++;
            if(k[i]==k[t3]*3)t3++;
            if(k[i]==k[t5]*5)t5++;
        }
        return k[n-1]; 
    }
};
