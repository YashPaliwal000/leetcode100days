Given a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.

 

Example 1:

Input: s = "abab"
Output: true
Explanation: It is the substring "ab" twice.
Example 2:

Input: s = "aba"
Output: false
Example 3:

Input: s = "abcabcabcabc"
Output: true
Explanation: It is the substring "abc" four times or the substring "abcabc" twice.
 

Constraints:

1 <= s.length <= 104
s consists of lowercase English letters.

Java Solution:

class Solution {
    public boolean repeatedSubstringPattern(String str) {
        int n = str.length();
        String pattern = str.substring(1) + str.substring(0,n-1);
        return pattern.contains(str);
    }
}
